name: Release

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on semantic version tags (v1.0.0, v0.2.1, etc.)
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Release tag name (e.g., v1.0.0)'
        required: true
        type: string

# Prevent concurrent releases
concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: write
  actions: read

jobs:
  # Build artifacts for all platforms
  build:
    name: Build Release Artifacts
    uses: ./.github/workflows/build.yml
    secrets: inherit

  # Create GitHub Release with built artifacts
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Determine tag name
        id: tag
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "tag_name=${{ github.event.inputs.tag_name }}" >> $GITHUB_OUTPUT
          else
            echo "tag_name=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          fi
      
      - name: Download all platform artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: extractous-ffi-*
          merge-multiple: false
      
      - name: Create platform archives
        shell: bash
        run: |
          cd artifacts
          
          for platform in linux_amd64 windows_amd64 darwin_arm64; do
            if [ -d "extractous-ffi-$platform" ]; then
              echo "Creating archive for $platform..."
              cd "extractous-ffi-$platform"
              tar czf "../extractous-ffi-$platform.tar.gz" lib/ include/
              cd ..
              
              # Generate checksum
              sha256sum "extractous-ffi-$platform.tar.gz" > "extractous-ffi-$platform.tar.gz.sha256"
              
              echo "âœ“ Created extractous-ffi-$platform.tar.gz"
            fi
          done
          
          echo ""
          echo "=== Created archives ==="
          ls -lh *.tar.gz 2>/dev/null || echo "No archives created"
      
      - name: Generate release notes
        id: release-notes
        shell: bash
        run: |
          TAG_NAME="${{ steps.tag.outputs.tag_name }}"
          
          cat > release_notes.md <<EOF
          # Extractous Go FFI ${TAG_NAME}
          
          Multi-platform native library binaries for extractous-go.
          
          ## Platforms
          
          - **Linux AMD64** - \`extractous-ffi-linux_amd64.tar.gz\`
          - **Windows AMD64** - \`extractous-ffi-windows_amd64.tar.gz\`
          - **macOS Apple Silicon** - \`extractous-ffi-darwin_arm64.tar.gz\`
          
          ## Installation
          
          \`\`\`bash
          # Download and extract for your platform
          tar xzf extractous-ffi-<platform>.tar.gz
          
          # Verify checksum
          sha256sum -c extractous-ffi-<platform>.tar.gz.sha256
          \`\`\`
          
          ## Contents
          
          Each archive contains:
          - Native shared libraries (\`.so\`, \`.dll\`, or \`.dylib\`)
          - C header files for FFI integration
          - All required dependencies (non-system libraries)
          
          ## Build Information
          
          - Built with GraalVM Native Image
          - Rust version: ${{ env.RUST_VERSION }}
          - Build date: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
          EOF
          
          cat release_notes.md
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag_name }}
          name: Release ${{ steps.tag.outputs.tag_name }}
          body_path: release_notes.md
          draft: false
          prerelease: ${{ contains(steps.tag.outputs.tag_name, '-') }}
          files: |
            artifacts/*.tar.gz
            artifacts/*.sha256
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Release summary
        shell: bash
        run: |
          TAG_NAME="${{ steps.tag.outputs.tag_name }}"
          
          echo "## ðŸŽ‰ Release Published: ${TAG_NAME}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Release created with the following artifacts:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          cd artifacts
          for platform in linux_amd64 windows_amd64 darwin_arm64; do
            if [ -f "extractous-ffi-$platform.tar.gz" ]; then
              size=$(du -h "extractous-ffi-$platform.tar.gz" | cut -f1)
              checksum=$(cat "extractous-ffi-$platform.tar.gz.sha256" | cut -d' ' -f1 | cut -c1-16)
              echo "- \`extractous-ffi-$platform.tar.gz\` ($size)" >> $GITHUB_STEP_SUMMARY
            fi
          done
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "View the release: https://github.com/${{ github.repository }}/releases/tag/${TAG_NAME}" >> $GITHUB_STEP_SUMMARY
