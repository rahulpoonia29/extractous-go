# cbindgen Configuration for Extractous FFI
#
# This configuration controls how cbindgen generates the C header file
# from the Rust FFI code. It ensures compatibility, proper documentation,
# and correct type mapping for Go cgo usage.

# Language and style settings
language = "C"
style = "both"  # Generate both C and C++ compatible headers
cpp_compat = true

# Header configuration
header = """
/* 
 * Extractous FFI - C Interface for Document Extraction
 * 
 * This header file provides a C-compatible interface to the extractous
 * document extraction library. It can be used with Go via cgo or any
 * other language that supports C FFI.
 *
 * License: Apache-2.0
 * Repository: https://github.com/rahulpoonia229/extractous-go
 *
 * IMPORTANT: All pointers returned by extractous functions must be freed
 * using the corresponding free functions. See documentation for each
 * function for specific memory management requirements.
 */
"""

include_guard = "EXTRACTOUS_FFI_H"
pragma_once = true
autogen_warning = "/* Warning: This file is auto-generated by cbindgen. Do not modify manually! */"

# Namespace and naming
namespace = "extractous"
namespaces = []

# Include system headers required for the generated code
sys_includes = ["stdint.h", "stdbool.h"]
includes = []

# Documentation settings
documentation = true
documentation_style = "c"
documentation_length = "full"

# Type settings and customizations
[export]
# Include all public items
include = []
exclude = []

# Prefix all C types to avoid naming conflicts
prefix = ""
item_types = ["globals", "enums", "structs", "unions", "typedefs", "opaque", "functions", "constants"]

[export.rename]
# No specific renames needed currently

[layout]
# Use C-style packed layout for structs
packed = false
aligned_n = 0

[fn]
# Function naming and behavior
rename_args = "None"
# Always use C calling convention
args = "auto"
must_use = "auto"
swift_name_macro = ""

[struct]
# Generate type definitions for opaque types
rename_fields = "None"
derive_constructor = false
derive_eq = false
derive_neq = false
derive_lt = false
derive_lte = false
derive_gt = false
derive_gte = false

[enum]
# Enum configuration
rename_variants = "None"
# Generate enums as constants (better C compatibility)
enum_class = false
# Prefix enum variants with enum name for namespacing
prefix_with_name = false

[const]
# Constant configuration
allow_static_const = true
allow_constexpr = false

[macro_expansion]
# Configure macro expansion behavior
bitflags = false

# Parse configuration
[parse]
parse_deps = false
include = []
exclude = []
clean = false
extra_bindings = []

[parse.expand]
crates = []
all_features = false
default_features = true
features = []
